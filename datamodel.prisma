type User {
  id: ID! @id
  avatar: String
  name: String! @unique
  email: String! @unique
  bio: String
  posts: [Post!]!
  likes: [Like!]!
  comments: [Comment!]!
  followers: [User] @relation(name: "FollowRelation")
  followings: [User] @relation(name: "FollowRelation")
  rooms: [Room!]!
  createdAt: DateTime! @createdAt
  updatedAt: DateTime! @updatedAt
  secret: String
}

type Post {
  id: ID! @id
  user: User!
  loaction: String
  caption: String!
  files: [File!]! @relation(name: "FilesOnPost", onDelete: CASCADE)
  likes: [Like!]! @relation(name: "LikesOnPost", onDelete: CASCADE)
  comments: [Comment!]!
  createdAt: DateTime! @createdAt
  updatedAt: DateTime! @updatedAt
}

type File {
  id: ID! @id
  url: String!
  post: Post @relation(name: "FilesOnPost")
}

type Like {
  id: ID! @id
  user: User!
  post: Post @relation(name: "LikesOnPost")
}

type Comment {
  id: ID! @id
  text: String!
  user: User!
  post: Post!
  createdAt: DateTime! @createdAt
  updatedAt: DateTime! @updatedAt
}

type Room {
  id: ID! @id
  participants: [User!]!
  messages: [Message]
  createdAt: DateTime! @createdAt
}

type Message {
  id: ID! @id
  text: String!
  from: User! @relation(name: "From")
  to: User! @relation(name: "To")
  createdAt: DateTime @createdAt
  room: Room!
}